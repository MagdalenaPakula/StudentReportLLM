services:
  app:
    build: services/conversion
    expose:
      - "5000"
    depends_on:
      - mongo
      - rabbitmq
      - logstash
      - qdrant
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    networks:
      - app-network
      - elk

  mongo:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__STORAGE__PATH=/qdrant/storage
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.2
    container_name: logstash
    volumes:
      - ./services/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - ./services/kibana:/etc/scripts:ro
    entrypoint: /etc/scripts/setup_kibana.sh
    healthcheck:
      test: /etc/scripts/check_health.sh
      start_period: 1m
    depends_on:
      - elasticsearch
    networks:
      - elk

  nginx:
    image: nginx:latest
    volumes:
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    ports:
      - "4000:4000"
    networks:
      - app-network

networks:
  elk:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  mongo_data:
  esdata:
  qdrant_data:
